package com.justmediagroup.ms.auditoriausuario.controller.contract;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;

import com.justmediagroup.logica_comun.utilitarios.RespuestaType;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;

@Validated
public interface IAuditoriaUsuarioController {

	@Operation(method = "verificarTransaccionDeUsuario", operationId = "verificarTrasaccionDeUsuario", description = "Capacidad que se encarga de consultar el usuario por email", tags = "UsuarioEntityServiceV1", summary = "consultar usuario por email")
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "OK", content = @Content(schema = @Schema(implementation = RespuestaType.class))),

			@ApiResponse(responseCode = "400", description = "Bad Request", content = @Content(schema = @Schema(implementation = RespuestaType.class))),

			@ApiResponse(responseCode = "404", description = "Not Fount", content = @Content(schema = @Schema(implementation = RespuestaType.class))),

			@ApiResponse(responseCode = "500", description = "Internal Server Error", content = @Content(schema = @Schema(implementation = RespuestaType.class))) })
	@GetMapping(value = "/api/ms/link/v1/{enlace}", produces = "application/json; charset=utf-8")
	public ResponseEntity<Object> verificarTransaccionUsuario(String enlace);

	@Operation(method = "consultarUsuarioPorEmail", operationId = "consultarUsuarioPorEmail", description = "Capacidad que se encarga de consultar el usuario por email", tags = "UsuarioEntityServiceV1", summary = "consultar usuario por email")
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "OK", content = @Content(schema = @Schema(implementation = RespuestaType.class))),

			@ApiResponse(responseCode = "400", description = "Bad Request", content = @Content(schema = @Schema(implementation = RespuestaType.class))),

			@ApiResponse(responseCode = "404", description = "Not Fount", content = @Content(schema = @Schema(implementation = RespuestaType.class))),

			@ApiResponse(responseCode = "500", description = "Internal Server Error", content = @Content(schema = @Schema(implementation = RespuestaType.class))) })
	@GetMapping(value = "/api/ms/login/v1/{correo}", produces = "application/json; charset=utf-8")
	public ResponseEntity<Object> logearUsuario(String usuario, String contrasenia);

}
