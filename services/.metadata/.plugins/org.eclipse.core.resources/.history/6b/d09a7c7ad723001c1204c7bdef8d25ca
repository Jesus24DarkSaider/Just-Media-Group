package com.justmediagroup.ms.auditoriausuario.service.command.consumer;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.HttpStatusCodeException;
import org.springframework.web.client.RestTemplate;

import com.justmediagroup.logica_comun.exception.BusinessException;
import com.justmediagroup.logica_comun.patrones.command.ICommand;
import com.justmediagroup.logica_comun.patrones.command.IParam;
import com.justmediagroup.logica_comun.utilitarios.RespuestaType;
import com.justmediagroup.ms.auditoriausuario.constans.AuditoriaUsuarioConstans;
import com.justmediagroup.ms.auditoriausuario.controller.dto.TransaccionDto;

@Component
public class ActualizarTransaccionCommand implements ICommand {

	private static final Logger LOG = LoggerFactory.getLogger(ActualizarTransaccionCommand.class);

	@Value("${uri.usuarioes}")
	private String hostService;

	@Override
	public Object execute(IParam parametro) throws BusinessException {
		ResponseEntity<RespuestaType> respuesta;
		
		TransaccionDto transaccionDto = (TransaccionDto) parametro;
		
		try {
			LOG.info("INICIA COMANDO ACTUALIZAR TRANSACCION");
			// DECLARAMOS LOS COMANDOS PARA EL CONSUMO DEL SERVICIO
			HttpHeaders header = new HttpHeaders();
			header.set("Content-Type", "application/json");
			HttpEntity<TransaccionDto> request = new HttpEntity<>(transaccionDto,header);
			RestTemplate restTemplate = new RestTemplate();
			
			respuesta = restTemplate.exchange(hostService.concat(AuditoriaUsuarioConstans.ACTUALIZAR_TRANSACCION),
					HttpMethod.PUT,
					request,
					RespuestaType.class);
			
			
			
		} catch (HttpStatusCodeException e) {

		}
		LOG.info("FINALIZA COMANDO ACTUALIZAR TRANSACCION");
		return null;
	}

	@Override
	public void undo() {
		throw new UnsupportedOperationException("Operacion no soportada");
	}

}
